{"version":3,"sources":["catalog/catalogItem.js","catalog/cartModal.js","catalog/catalogList.js","App.js","serviceWorker.js","index.js"],"names":["CatalogItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeUnit","selectedUnit","state","console","log","name","unit","setState","JSON","stringify","handleChangeQuantity","selectedQuantity","quantity","target","value","handeSubmitItem","inCart","updateCart","id","itemName","_this$props","itemInCart","itemCartQuantity","itemCartName","itemCartUnit","itemUnit","react_default","a","createElement","align","react_select_esm","options","placeholder","onChange","getOptionLabel","getOptionValue","alias","type","onClick","Component","portalRoot","document","getElementById","CartModal","componentDidMount","appendChild","el","componentWillUnmount","removeChild","children","ReactDOM","createPortal","CatalogList","item","itemsInCart","concat","toConsumableArray","filteredCart","toggleCart","showCart","searchChangeAll","e","catalog","CatalogData","filter","item_name","toLowerCase","includes","searchChangeCart","_this2","className","border","map","catalogElement","index","catalogItem","key","_id","units","Fragment","cartModal_CartModal","cartElement","App","catalog_catalogList","Boolean","window","location","hostname","match","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.532cb507.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Select from 'react-select';\n//import InputNumber from 'react-input-number';\n\nclass CatalogItem extends Component {\n    constructor(props){\n        super();\n        this.state = {\n            id: props.id,\n            name: props.itemName,\n            quantity: 1,\n            inCart: false,\n            unit: \"\"\n        };\n        console.log(\"constructor\");\n    }\n    \n\n    handleChangeUnit = selectedUnit => {\n        const state = this.state;\n        console.log(\"LABEL\", selectedUnit.name);\n        state.unit = selectedUnit.name;\n        this.setState(state);\n        console.log(`Options selected:`, JSON.stringify(state, null, 4));\n        console.log(\"STATE\", state);\n    };\n    \n    handleChangeQuantity = selectedQuantity => {\n        const state = this.state;\n        state.quantity = selectedQuantity.target.value;\n        this.setState(state);\n        console.log(\"STATE\", state);\n    };\n\n    handeSubmitItem = () => {\n        const state = this.state;\n        state.inCart = true;\n        this.setState(state);\n        console.log(\"STATE\", state);\n        this.props.updateCart(this.state);\n    };\n\n    render(){\n        const {itemInCart, itemCartQuantity, itemCartName, itemCartUnit, itemName, itemUnit} = this.props;\n        if(this.props.itemInCart===true){\n                console.log(\"catalogItemInCart\", itemCartName, itemCartUnit);\n                return( \n                    <tr>\n                                        <td>{itemCartName}</td>\n                                        <td align=\"center\">{itemCartUnit} </td>\n                                        <td align=\"center\">{itemCartQuantity}</td>\n                                        <td align=\"center\">{itemInCart}</td>\n                    </tr>\n                )\n        }else{\n            console.log(\"catalogItem\", itemName, itemUnit);\n            return( \n                <tr>\n                                    <td>{itemName}</td>\n                                    <td align=\"center\">\n                                        <Select \n                                            options={itemUnit} \n                                            placeholder={\"select Unit\"} \n                                            onChange={this.handleChangeUnit}  \n                                            getOptionLabel={(itemUnit)=>itemUnit.name} \n                                            getOptionValue={(itemUnit)=>itemUnit.alias} />\n                                    </td>\n                                    <td align=\"center\">\n                                        <input\n                                            name=\"quantityOfItem\"\n                                            type=\"number\"\n                                            placeholder={this.state.quantity}\n                                            onChange={this.handleChangeQuantity} />\n                                    </td>\n                                    <td align=\"center\">\n                                        <button onClick={this.handeSubmitItem} >Add to cart!</button>\n                                    </td>\n                </tr>\n            )\n        }\n    }\n}\nexport default CatalogItem;\n\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nconst portalRoot = document.getElementById(\"cartPortal\");\n\nexport default class CartModal extends Component {\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  };\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.el);\n  };\n\n  render() {\n    const { children } = this.props;\n    return ReactDOM.createPortal(children, this.el);\n  }\n}\n","import React, {Component} from 'react';\nimport CatalogData from './items-example.json';\nimport CatalogItem from './catalogItem.js';\nimport CartModal from './cartModal.js';\nimport './catalogList.css';\nimport { tsImportEqualsDeclaration } from '@babel/types';\n\nclass CatalogList extends Component {\n    constructor(){\n        super();\n        this.state = {\n            catalog: CatalogData,\n            itemsInCart:[],\n            filteredCart:[],\n            showCart: false  \n        }\n        this.updateCart = this.updateCart;\n    }\n    \n    updateCart = (item) => {\n        this.setState({ itemsInCart: [...this.state.itemsInCart, item], filteredCart: [...this.state.filteredCart, item] }) \n    }\n\n    toggleCart = () => {\n        this.setState({\n            showCart: !this.state.showCart\n        })\n    }\n\n    searchChangeAll = (e) => {\n        console.log(\"SUCHE\", e.target.value);\n        const state = this.state;\n        state.catalog = CatalogData.filter(item => {\n            return item.item_name.toLowerCase().includes(e.target.value.toLowerCase());\n        });\n        console.log(\"FILTERED\", state.catalog);\n        this.setState(state);\n    }\n\n    searchChangeCart = (e) => {\n        console.log(\"SUCHECART\", e.target.value);\n        const state = this.state;\n        state.filteredCart = state.itemsInCart.filter(item => {\n            return item.name.toLowerCase().includes(e.target.value.toLowerCase());\n        });\n        console.log(\"FILTEREDCART\", state.catalog);\n        this.setState(state);\n    }\n\n    render(){   \n        console.log(\"itemsInCart\", this.state.itemsInCart); \n        const { showCart } = this.state;\n        return( \n            <div className=\"container\"> \n            <div className=\"box\"> \n            <div className=\"box-row\"> \n                <div className=\"box-cell box1\">\n                    <h2>Sortiment:</h2><h3>Suche... \n                        <input\n                            type='search' \n                            placeholder='search for item'\n                            onChange={this.searchChangeAll}  /> </h3>\n                            \n                    <table border=\"3px solid\">\n                        <tbody>\n                                <tr>\n                                    <th>Item</th>\n                                    <th>Unit</th>\n                                    <th>Quantity</th>\n                                    <th>Submit</th>\n                                </tr>\n                                {this.state.catalog.map((catalogElement, index)=>{\n                                    return <CatalogItem key={catalogElement._id} updateCart={this.updateCart} id={catalogElement._id} itemName={catalogElement.item_name} itemUnit={catalogElement.units} />\n                                })}\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"box-cell box2\">\n                <React.Fragment>\n          <CartModal>\n            {\n              showCart ?\n                <div className=\"box-cell box2\">\n                    <h2>Warenkorb:</h2><h3>Suche... \n                                <input\n                                type='search' \n                                placeholder='search for item'\n                                onChange={this.searchChangeCart}  /> </h3>\n                        <table border=\"3px solid\">\n                            <tbody>\n                                    <tr>\n                                        <th>Item</th>\n                                        <th>Unit</th>\n                                        <th>Quantity</th>\n                                        <th>Submit</th>\n                                    </tr>\n                                    {this.state.filteredCart.map((cartElement, index)=>{\n                                        return <CatalogItem key={cartElement.id} id={cartElement.id} itemCartQuantity={cartElement.quantity} itemInCart={cartElement.inCart} itemCartName={cartElement.name} itemCartUnit={cartElement.unit} />\n                                    })}\n                            </tbody>\n                        </table>\n                </div>\n              : null\n            }\n        \n                  \n                        \n                    </CartModal>\n                    </React.Fragment>\n                    <button onClick={this.toggleCart}>Show Cart?</button> \n                </div>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default CatalogList;\n","import React from 'react';\nimport CatalogList from './catalog/catalogList.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n       <h1>OrderLion</h1>\n       <CatalogList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}